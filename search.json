[
  {
    "objectID": "creating-a-reactjs-component.html",
    "href": "creating-a-reactjs-component.html",
    "title": "Creating a ReactJS Component",
    "section": "",
    "text": "Creating a ReactJS Component"
  },
  {
    "objectID": "conclusion.html",
    "href": "conclusion.html",
    "title": "Conclusion",
    "section": "",
    "text": "Conclusion of this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Create an NPM Package",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "building-our-application.html",
    "href": "building-our-application.html",
    "title": "Building Our Application",
    "section": "",
    "text": "Creating a ReactJS Component\nPublishing a ReactJS Component as a Package to Node Package Manager (NPM) Registry"
  },
  {
    "objectID": "requirements.html",
    "href": "requirements.html",
    "title": "Requirements",
    "section": "",
    "text": "Requirements of the application of this site"
  },
  {
    "objectID": "introduction.html",
    "href": "introduction.html",
    "title": "Introduction",
    "section": "",
    "text": "Fully automated release!!! semantic-release automates the whole package release workflow including: determining the next version number, generating the release notes and publishing the package.\nThis removes the immediate connection between human emotions and version numbers, strictly following the Semantic Versioning specification.\nsemantic-release is meant to be executed on the CI environment after every successful build on the release branch. This way no human is directly involved in the release process and the releases are guaranteed to be unromantic and unsentimental.\nGitHub Actions makes it easy to automate all your software workflows, now with world-class CI/CD. Build, test, and deploy your code right from GitHub.\nHere weâ€™ll show how we can publish our packages automatically to npm every time someone does a git commit into our main branch. For that we are going to use github actions and semantic release. If you have never heard about semantic release, it will look into all the commit messages we did since the last time we publish to npm, try to understand from all those messages what is the next version that we should publish and then go ahead and do the publish for us so that process becomes completely automated by having github actions and semantic release."
  },
  {
    "objectID": "SUMMARY.html",
    "href": "SUMMARY.html",
    "title": "Create an NPM Package",
    "section": "",
    "text": "Table of contents\n\nCreate an NPM Package"
  }
]