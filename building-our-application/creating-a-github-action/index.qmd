---
title: "Creating a GitHub Action"
---

Based on "Fully Automated npm publish using GitHub Actions and Semantic Release" at https://www.youtube.com/watch?v=QZdY4XYbqLI

The next step is to create a GitHub action so click the "**Actions**" tab on the GitHub repository page of **foo-component**. From the **Continuous Integration** workflows choose the workflow called **NodeJS: Build and test a Node.js project with npm.** and click on "**configure**".

Rename the default name that is given to the Yaml file, here: **node.js.yml**, to something more appropriate: **publish.yml**.

Next, lets look inside of the newly created Action:

``` {.yml}
# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
...
```
.github/workflows/publish.yml

Then ```on push``` to the branch **main** all of the underneath jobs will run at the same time. Equally, if there is a ```pull request``` from any branch into main that request will run all of those jobs as well.

Next is **jobs**.

``` {.yml}
...
jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
...
```
.github/workflows/publish.yml

The build currently runs *only* on **ubuntu the latest version**. To run this in multiple operating systems, change the above as shown here (including renaming 'build' to 'quality' as this job is all about checking quality):

``` {.yml}
...
jobs:
  quality:

    runs-on: ${{ matrix.os}}

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        os: [ubuntu-latest, windows-latest, macos-latest]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
...
```
.github/workflows/publish.yml

This matrix now has three operating systems and three versions of node, so we will have (three times three is) nine jobs running.

**WARNING**: If you find errors when building these combinations of ```os``` and ```node version```, you can adjust this node.js.yml file so that it takes fewer ```os``` and/or ```node versions``` into account. For example, leave out node version 14. This way your builds may succeed at the cost of platform / backwards compatibility.

Following are **steps**:

``` {.yml}
...
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
...
```
.github/workflows/publish.yml

The first step is just to clone and check out our branch:

``` { .yml }
...
    - uses: actions/checkout@v3
...
```
.github/workflows/publish.yml

The second step is to set up node.js and as you can see it's already using that matrix for the node version that we are using:

``` { .yml }
...
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
...
```
.github/workflows/publish.yml

Then the **run** commands:

``` { .yml }
...
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
...
```
.github/workflows/publish.yml

The first run command is the ```npm ci```, which is similar to ```npm install```.

The second run command is building this library we are running tests.

The third run command will run any tests defined.

Commit the new GitHub Action file (here: **node.js.yml**).

By commiting to the **main** branch, this will start already the new GitHub Action.
